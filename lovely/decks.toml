[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Other decks don't have counterpart
[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = "if self.GAME.starting_params.no_faces and SMODS.Ranks[v.value].face then keep = false end"
position = 'after'
match_indent = true
payload = '''
if (SMODS.Ranks[v.value].counterpart and SMODS.Ranks[v.value].counterpart.is) or _r == 'showdown_Z' then
    keep = false
end
'''

# ?????
# Calculus deck forces first booster in shop to be a Calculus booster, part 1/2
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "G.GAME.current_round.used_packs[i] = get_pack('shop_pack').key"
position = "at"
match_indent = true
payload = '''
G.GAME.current_round.used_packs[i] = get_pack('shop_pack', (G.GAME.first_booster_calculus and i == 1 and 'booster_calculus')).key
'''

# Calculus deck forces first booster in shop to be a Calculus booster, part 2/2
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if not G.GAME.first_shop_buffoon and not G.GAME.banned_keys['p_buffoon_normal_1'] then"
position = "at"
match_indent = true
payload = '''
if not G.GAME.first_booster_calculus and not G.GAME.first_shop_buffoon and not G.GAME.banned_keys['p_buffoon_normal_1'] then
'''

# Cheater deck card destruction
[[patches]]
[patches.pattern]
target = '''=[SMODS _ "src/utils.lua"]'''
pattern = "if scoring_hand and SMODS.has_enhancement(card, 'm_glass') and not card.debuff and pseudorandom('glass') < G.GAME.probabilities.normal/(card.ability.name == 'Glass Card' and card.ability.extra or G.P_CENTERS.m_glass.config.extra) then"
position = "before"
match_indent = true
payload = '''
if
    scoring_hand
    and G.GAME.showdown_cheater
    and not card.debuff
    and not (next(find_joker('versatile_joker')) or next(find_joker('versatile_joker_all_in_one')))
    and (not G.GAME.cheater_seal or (G.GAME.cheater_seal and not card:get_seal())) -- This is for the Cheater Sleeve
    and pseudorandom('cheater') < G.GAME.probabilities.normal/4
then
    destroyed = true
end
'''

# Cheater deck card creation
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.GAME.current_round.hands_played = G.GAME.current_round.hands_played + 1"
position = "after"
match_indent = true
payload = '''
SMODS.calculate_context({post_hand = true})
'''

# Engineer deck
#[[patches]]
#[patches.pattern]
#target = "functions/common_events.lua"
#pattern = "local _pool, _pool_key = get_current_pool('Tag', nil, nil, append)"
#position = "at"
#match_indent = true
#payload = '''
#local _pool, _pool_key = get_current_pool(G.GAME.showdown_engineer and 'Switch' or 'Tag', nil, nil, append)
#'''