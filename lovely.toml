[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Counterpart ranks and mathematic color, part 1/2
[[patches]]
[patches.pattern]
target = 'globals.lua'
pattern = "RENTAL = HEX('b18f43'),"
position = 'after'
match_indent = true
payload = '''
    COUNTERPART_RANKS = HEX('485fab'),
    SHOWDOWN_CALCULUS = HEX('b84242'),
    SHOWDOWN_CALCULUS_DARK = HEX('8a3434'),
'''

# Counterpart ranks and mathematic color, part 2/2
[[patches]]
[patches.pattern]
target = 'functions/misc_functions.lua'
pattern = "legendary = G.C.RARITY[4],"
position = 'after'
match_indent = true
payload = '''
    counterpart_ranks = G.C.COUNTERPART_RANKS,
    showdown_calculus = G.C.SHOWDOWN_CALCULUS,
    showdown_calculus_dark = G.C.SHOWDOWN_CALCULUS_DARK,
'''

# Counterpart don't spawn in decks except the counterpart deck, part 1/3
[[patches]]
[patches.pattern]
target = 'functions/misc_functions.lua'
pattern = "erratic_suits_and_ranks = false,"
position = 'after'
match_indent = true
payload = '''
    counterpart_replacing = false,
'''

# Counterpart don't spawn in decks except the counterpart deck, part 2/3
[[patches]]
[patches.pattern]
target = 'back.lua'
pattern = "if self.effect.config.spectral_rate then"
position = 'before'
match_indent = true
payload = '''
    if self.effect.config.counterpart_replacing then
        G.GAME.starting_params.counterpart_replacing = true
    end
'''

# Counterpart don't spawn in decks except the counterpart deck, part 3/3
[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = "if self.GAME.starting_params.no_faces and (_r == 'K' or _r == 'Q' or _r == 'J') then keep = false end"
position = 'after'
match_indent = true
payload = '''
    if (self.GAME.starting_params.counterpart_replacing and (_r == 'K' or _r == 'Q' or _r == 'J' or _r == '2' or _r == '5' or _r == '8' or _r == 'A'))
    or ((not self.GAME.starting_params.counterpart_replacing) and (_r == 'showdown_L' or _r == 'showdown_P' or _r == 'showdown_B' or _r == 'showdown_W' or _r == 'showdown_F' or _r == 'showdown_E' or _r == 'showdown_Z')) then 
        keep = false
    end
'''

# Zero has wild card behavior by default, part 1/2
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'if self.ability.name == "Wild Card" and not self.debuff then'
position = 'before'
match_indent = true
payload = '''
    if self.base.value == 'showdown_Zero' and not self.debuff then
        return true
    end
'''

# Zero has wild card behavior by default, part 2/2
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'if self.ability.name == "Wild Card" then'
position = 'before'
match_indent = true
payload = '''
    if self.base.value == 'showdown_Zero' then
        return true
    end
'''

# Counterparts counts as original
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'return self.base.id'
position = 'at'
match_indent = true
payload = '''
    return math.abs(self.base.id)
'''

# 0 cards counts in Even Steven scoring
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'context.other_card:get_id()%2 == 0'
position = 'at'
match_indent = true
payload = '''
    (context.other_card:get_id()%2 == 0 or context.other_card:get_id() == 1)
'''